NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
17122      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17123      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17124      put '<Node Id="Ids" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids" Event="Update" Pid="" Gridid=""/>';
17125      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 48.
      The maximum record length was 48.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17126      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Ids : Beginning update before running 
* datetime : 25APR2020:21:59:31 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     filename _emtool_ '\\apporto.com\dfs\UNCC\Users\skokse_uncc\Desktop\BIA-PROJECT\Predictive Analysis\Workspaces\EMWS4\Ids\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17128      %let _HPDMGRIDHOST=;
17129      %let _HPDMGRIDINSTALLLOC=;
17130      %let _HPDMGRIDDATASERVER=;
17131      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Ids : End update 
* datetime : 25APR2020:21:59:31 
* 
*------------------------------------------------------------* 
17132      %let _emdsep = \;
17133      %em_getactionstatus(emlib =EMWS4, nodeid=Ids);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17134      %let em_Train = N;
17135      %let em_Score = N;
17136      %let em_Report = N;
17137      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

17138      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17139      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17140      put '<Node Id="Ids" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids" Event="Complete" Pid="" Gridid=""/>';
17141      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17142      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17143      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Ids" is up to date and doesn't need to run. 
Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "TREE2" 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
17144      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17145      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17146      put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Update" Pid="" Gridid=""/>';
17147      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17148      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Part : Beginning update before running 
* datetime : 25APR2020:21:59:32 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Part_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS4.Ids_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\apporto.com\dfs\UNCC\Users\skokse_uncc\Desktop\BIA-PROJECT\Predictive Analysis\Workspaces\EMWS4\Part\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17167      %let _HPDMGRIDHOST=;
17168      %let _HPDMGRIDINSTALLLOC=;
17169      %let _HPDMGRIDDATASERVER=;
17170      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part : End update 
* datetime : 25APR2020:21:59:33 
* 
*------------------------------------------------------------* 
17171      %let _emdsep = \;
17172      %em_getactionstatus(emlib =EMWS4, nodeid=Part);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17173      %let em_Train = N;
17174      %let em_Score = N;
17175      %let em_Report = N;
17176      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

17177      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17178      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17179      put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Complete" Pid="" Gridid=""/>';
17180      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17181      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17182      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "Part" is up to date and doesn't need to run. 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
traverser_readyNode_note 
17183      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17184      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17185      put '<Node Id="Tree2" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree2" Event="Update" Pid="" Gridid=""/>';
17186      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17187      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree2 : Beginning update before running 
* datetime : 25APR2020:21:59:33 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS4.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify TargetBuy(type=PROFIT label= TargetBuy);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.TargetBuy;
MPRINT(EM_DECDATA):   length TargetBuy $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   TargetBuy="1";
MPRINT(EM_DECDATA):   COUNT=5505;
MPRINT(EM_DECDATA):   DATAPRIOR=0.24771632992845;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.24771632992845;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   TargetBuy="0";
MPRINT(EM_DECDATA):   COUNT=16718;
MPRINT(EM_DECDATA):   DATAPRIOR=0.75228367007154;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.75228367007154;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify TargetBuy(type=PROFIT label= TargetBuy);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify TargetBuy(type=PROFIT label= TargetBuy);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS4.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
17598      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
17599      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
17600      TARGET="TargetBuy";
MPRINT(EM_DIAGRAM):   TARGET="TargetBuy";
17601      DECDATA="EMWS4.Ids_TargetBuy_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS4.Ids_TargetBuy_DD";
17602      DECMETA="EMWS4.Ids_TargetBuy_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS4.Ids_TargetBuy_DM";
17603      output;
MPRINT(EM_DIAGRAM):   output;
17604      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17605      %let emexceptionString =;
17606      %let EMEXCEPTIONSTRING=;
17607      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17608      * UPDATE: Tree2;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree2;
17609      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17610      %let EM_ACTION = UPDATE;
17611      %let syscc = 0;
17612      %macro main;
17613      
17614        %if %upcase(&EM_ACTION) = CREATE %then %do;
17615          filename temp catalog 'sashelp.emmodl.tree_create.source';
17616          %include temp;
17617          filename temp;
17618      
17619          %em_tree_create;
17620        %end;
17621      
17622         %else
17623         %if %upcase(&EM_ACTION) = TRAIN %then %do;
17624      
17625             filename temp catalog 'sashelp.emmodl.tree_train.source';
17626             %include temp;
17627             filename temp;
17628             %em_tree_train;
17629         %end;
17630      
17631        %else
17632        %if %upcase(&EM_ACTION) = SCORE %then %do;
17633          filename temp catalog 'sashelp.emmodl.tree_score.source';
17634          %include temp;
17635          filename temp;
17636      
17637          %em_tree_score;
17638      
17639        %end;
17640      
17641        %else
17642        %if %upcase(&EM_ACTION) = REPORT %then %do;
17643      
17644             filename temp catalog 'sashelp.emmodl.tree_report.source';
17645             %include temp;
17646             filename temp;
17647      
17648             %em_tree_report;
17649         %end;
17650      
17651        %else
17652        %if %upcase(&EM_ACTION) = OPENINT %then %do;
17653      
17654             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17655             %include temp;
17656             filename temp;
17657             %EM_TREE_OPENTREEVIEWER;
17658      
17659         %end;
17660      
17661        %else
17662        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17663      
17664             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17665             %include temp;
17666             filename temp;
17667             %EM_TREE_CLOSETREEVIEWER;
17668      
17669         %end;
17670      
17671      
17672         %doendm:
17673      %mend main;
17674      
17675      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
17676      
17677      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17678      * End UPDATE: Tree2;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree2;
17679      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

17680      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ '\\apporto.com\dfs\UNCC\Users\skokse_uncc\Desktop\BIA-PROJECT\Predictive Analysis\Workspaces\EMWS4\Tree2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17682      %let _HPDMGRIDHOST=;
17683      %let _HPDMGRIDINSTALLLOC=;
17684      %let _HPDMGRIDDATASERVER=;
17685      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree2 : End update 
* datetime : 25APR2020:21:59:34 
* 
*------------------------------------------------------------* 
17686      %let _emdsep = \;
17687      %em_getactionstatus(emlib =EMWS4, nodeid=Tree2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17688      %let em_filemodtime=;
17689      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17690      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17691      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17692      where fileref eq "#LN00206";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00206";
17693      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17694      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00206';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

17695      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17696      %let em_Train = N;
17697      %let em_Score = N;
17698      %let em_Report = N;
17699      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

17700      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17701      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17702      put '<Node Id="Tree2" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree2" Event="Complete" Pid="" Gridid=""/>';
17703      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17704      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17705      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17706      put '<Node Id="Tree" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Update" Pid="" Gridid=""/>';
17707      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 49.
      The maximum record length was 49.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

17708      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree : Beginning update before running 
* datetime : 25APR2020:21:59:34 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS4.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify TargetBuy(type=PROFIT label= TargetBuy);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = '';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.TargetBuy;
MPRINT(EM_DECDATA):   length TargetBuy $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   TargetBuy="1";
MPRINT(EM_DECDATA):   COUNT=5505;
MPRINT(EM_DECDATA):   DATAPRIOR=0.24771632992845;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.24771632992845;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   TargetBuy="0";
MPRINT(EM_DECDATA):   COUNT=16718;
MPRINT(EM_DECDATA):   DATAPRIOR=0.75228367007154;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.75228367007154;
MPRINT(EM_DECDATA):   DECPRIOR=.;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify TargetBuy(type=PROFIT label= TargetBuy);
MPRINT(EM_DECDATA):   label DECISION1= '1';
MPRINT(EM_DECDATA):   label DECISION2= '0';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify TargetBuy(type=PROFIT label= TargetBuy);
MPRINT(EM_DIAGRAM):   label DECISION1= "1";
MPRINT(EM_DIAGRAM):   label DECISION2= "0";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS4.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
18119      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
18120      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
18121      TARGET="TargetBuy";
MPRINT(EM_DIAGRAM):   TARGET="TargetBuy";
18122      DECDATA="EMWS4.Ids_TargetBuy_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS4.Ids_TargetBuy_DD";
18123      DECMETA="EMWS4.Ids_TargetBuy_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS4.Ids_TargetBuy_DM";
18124      output;
MPRINT(EM_DIAGRAM):   output;
18125      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18126      %let emexceptionString =;
18127      %let EMEXCEPTIONSTRING=;
18128      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18129      * UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree;
18130      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18131      %let EM_ACTION = UPDATE;
18132      %let syscc = 0;
18133      %macro main;
18134      
18135        %if %upcase(&EM_ACTION) = CREATE %then %do;
18136          filename temp catalog 'sashelp.emmodl.tree_create.source';
18137          %include temp;
18138          filename temp;
18139      
18140          %em_tree_create;
18141        %end;
18142      
18143         %else
18144         %if %upcase(&EM_ACTION) = TRAIN %then %do;
18145      
18146             filename temp catalog 'sashelp.emmodl.tree_train.source';
18147             %include temp;
18148             filename temp;
18149             %em_tree_train;
18150         %end;
18151      
18152        %else
18153        %if %upcase(&EM_ACTION) = SCORE %then %do;
18154          filename temp catalog 'sashelp.emmodl.tree_score.source';
18155          %include temp;
18156          filename temp;
18157      
18158          %em_tree_score;
18159      
18160        %end;
18161      
18162        %else
18163        %if %upcase(&EM_ACTION) = REPORT %then %do;
18164      
18165             filename temp catalog 'sashelp.emmodl.tree_report.source';
18166             %include temp;
18167             filename temp;
18168      
18169             %em_tree_report;
18170         %end;
18171      
18172        %else
18173        %if %upcase(&EM_ACTION) = OPENINT %then %do;
18174      
18175             filename temp catalog 'sashelp.emmodl.tree_actions.source';
18176             %include temp;
18177             filename temp;
18178             %EM_TREE_OPENTREEVIEWER;
18179      
18180         %end;
18181      
18182        %else
18183        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
18184      
18185             filename temp catalog 'sashelp.emmodl.tree_actions.source';
18186             %include temp;
18187             filename temp;
18188             %EM_TREE_CLOSETREEVIEWER;
18189      
18190         %end;
18191      
18192      
18193         %doendm:
18194      %mend main;
18195      
18196      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
18197      
18198      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18199      * End UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree;
18200      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

18201      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ '\\apporto.com\dfs\UNCC\Users\skokse_uncc\Desktop\BIA-PROJECT\Predictive Analysis\Workspaces\EMWS4\Tree\PROPERTIES.xml' encoding="UTF-8" NOBOM;
18203      %let _HPDMGRIDHOST=;
18204      %let _HPDMGRIDINSTALLLOC=;
18205      %let _HPDMGRIDDATASERVER=;
18206      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree : End update 
* datetime : 25APR2020:21:59:35 
* 
*------------------------------------------------------------* 
18207      %let _emdsep = \;
18208      %em_getactionstatus(emlib =EMWS4, nodeid=Tree);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

18209      %let em_filemodtime=;
18210      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
18211      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
18212      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
18213      where fileref eq "#LN00227";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00227";
18214      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
18215      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00227';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

18216      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
18217      %let em_Train = N;
18218      %let em_Score = N;
18219      %let em_Report = N;
18220      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

18221      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18222      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18223      put '<Node Id="Tree" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Complete" Pid="" Gridid=""/>';
18224      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18225      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18226      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

Node "Tree2" is up to date and doesn't need to run. 
Node "Tree" is up to date and doesn't need to run. 
traverser_readyNode_note 
18227      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18228      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18229      put '<Node Id="MdlComp" Event="Update" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Update" Pid="" Gridid=""/>';
18230      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18231      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp : Beginning update before running 
* datetime : 25APR2020:21:59:36 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS4.Tree_exportSet EMWS4.Tree2_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("TREE_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_TEST") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE2_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base2Q4W3YF as select * from WORK.M1_5G5UP order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp2Q4W3YF as select * from WORK.M1R2_U6L order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base2Q4W3YF compare=work._comp2Q4W3YF out=WORK._DIFF1U2O_00 noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ '\\apporto.com\dfs\UNCC\Users\skokse_uncc\Desktop\BIA-PROJECT\Predictive Analysis\Workspaces\EMWS4\MdlComp\PROPERTIES.xml' encoding="UTF-8" NOBOM;
18270      %let _HPDMGRIDHOST=;
18271      %let _HPDMGRIDINSTALLLOC=;
18272      %let _HPDMGRIDDATASERVER=;
18273      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp : End update 
* datetime : 25APR2020:21:59:37 
* 
*------------------------------------------------------------* 
18274      %let _emdsep = \;
18275      %em_getactionstatus(emlib =EMWS4, nodeid=MdlComp);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

18276      %let em_Train = N;
18277      %let em_Score = N;
18278      %let em_Report = N;
18279      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

18280      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18281      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18282      put '<Node Id="MdlComp" Event="Complete" Pid="" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp" Event="Complete" Pid="" Gridid=""/>';
18283      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=MSNV-UNCC1-RDS3,
      Local Host IP addr=fe80::9814:81d4:f9ab:fae2%3,
      Peer Hostname Name=MSNV-UNCC1-RDS3.apporto.com,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=62864,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

18284      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18285      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Node "MdlComp" is up to date and doesn't need to run. 
Traverser: Run Completed 
18286      proc printto;
MPRINT(EM_DIAGRAM):    proc printto;
18287      run;
MPRINT(EM_DIAGRAM):   run;

